#include "MyLocationClass.h"
#include "Android/AndroidJNI.h"
#include "Android/AndroidApplication.h"
#include "Android/AndroidThunk.h"
#include "Misc/MessageDialog.h"

TArray<float> UMyLocationClass::GetCurrentLocation()
{
    TArray<float> LocationData;

    // Get the JNI environment
    JNIEnv* Env = FAndroidApplication::GetJavaEnv();
    if (Env == nullptr)
    {
        return LocationData;  // Return an empty array if there's no JNI environment
    }

    // Get the class of the Android activity
    jclass ActivityClass = FAndroidApplication::FindJavaClass("com/yourcompany/MyGameActivity");
    if (ActivityClass == nullptr)
    {
        return LocationData;  // Class not found
    }

    // Get the method ID for AndroidThunkJava_GetCurrentLocation
    jmethodID MethodID = Env->GetMethodID(ActivityClass, "AndroidThunkJava_GetCurrentLocation", "(Landroid/content/Context;)[F");
    if (MethodID == nullptr)
    {
        return LocationData;  // Method not found
    }

    // Get the current Android activity context
    jobject Context = FAndroidApplication::GetGameActivityThis();
    if (Context == nullptr)
    {
        return LocationData;  // Context is null
    }

    // Call the Java method and get the float array
    jfloatArray LocationArray = (jfloatArray)Env->CallObjectMethod(Context, MethodID, Context);
    if (LocationArray != nullptr)
    {
        // Convert the Java float array to C++ TArray
        jsize ArrayLength = Env->GetArrayLength(LocationArray);
        LocationData.SetNum(ArrayLength);
        Env->GetFloatArrayRegion(LocationArray, 0, ArrayLength, LocationData.GetData());
    }

    // Clean up local references
    Env->DeleteLocalRef(ActivityClass);
    Env->DeleteLocalRef(LocationArray);

    return LocationData;
}
